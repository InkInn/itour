{"version":3,"file":"blockui.js","sourceRoot":"","sources":["blockui.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAuG;AACvG,0CAA6C;AAC7C,gDAA6C;AAU7C,IAAa,OAAO;IAQhB,iBAAmB,EAAc,EAAQ,UAAsB;QAA5C,OAAE,GAAF,EAAE,CAAY;QAAQ,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE1D,sBAAI,4BAAO;aAAX;YACL,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;aAED,UAAY,GAAY;YACpB,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEpB,EAAE,CAAA,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACZ,EAAE,CAAA,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACb,IAAI,CAAC,KAAK,EAAE,CAAC;gBACjB,IAAI;oBACA,IAAI,CAAC,OAAO,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;;;OAXA;IAaD,iCAAe,GAAf;QACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAE/C,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACjD,MAAM,wDAAwD,CAAC;QACnE,CAAC;IACL,CAAC;IAED,uBAAK,GAAL;QACI,EAAE,CAAA,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAE,EAAE,CAAC;YAClC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,uBAAU,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,yBAAO,GAAP;QACI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED,6BAAW,GAAX;IAEA,CAAC;IACL,cAAC;AAAD,CAAC,AAtDD,IAsDC;AApDY;IAAR,YAAK,EAAE;;uCAAa;AAQZ;IAAR,YAAK,EAAE;;;sCAEP;AAZQ,OAAO;IAPnB,gBAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,sKAET;QACD,SAAS,EAAE,CAAC,uBAAU,CAAC;KAC1B,CAAC;qCASyB,iBAAU,EAAoB,uBAAU;GARtD,OAAO,CAsDnB;AAtDY,0BAAO;AA6DpB,IAAa,aAAa;IAA1B;IAA6B,CAAC;IAAD,oBAAC;AAAD,CAAC,AAA9B,IAA8B;AAAjB,aAAa;IALzB,eAAQ,CAAC;QACN,OAAO,EAAE,CAAC,qBAAY,CAAC;QACvB,OAAO,EAAE,CAAC,OAAO,CAAC;QAClB,YAAY,EAAE,CAAC,OAAO,CAAC;KAC1B,CAAC;GACW,aAAa,CAAI;AAAjB,sCAAa","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,EventEmitter,ElementRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from '../dom/domhandler';\nimport {BlockableUI} from '../common/api';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div class=\"ui-blockui ui-widget-overlay\" [ngClass]=\"{'ui-blockui-document':!target}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\"></div>\n    `,\n    providers: [DomHandler]\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    _blocked: boolean;\n    \n    _mask: HTMLDivElement;\n    \n    constructor(public el: ElementRef,public domHandler: DomHandler) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if(this._mask) {\n            if(this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        this._mask = this.el.nativeElement.children[0];\n        \n        if(this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if(this.target) {\n            this.target.getBlockableElement().appendChild(this._mask);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this._mask);\n        }\n        \n        this._mask.style.zIndex = String(++DomHandler.zindex);\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this._mask);\n    }\n    \n    ngOnDestroy() {\n        \n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }"]}